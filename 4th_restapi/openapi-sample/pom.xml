<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mamezou</groupId>
  <artifactId>openApiSample</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <!-- environment settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    <input.openapi.document>openapi/openapi.yml</input.openapi.document>

    <!-- library versions -->
    <version.helidon>2.2.1</version.helidon>
    <version.lib.junit-platform>1.7.0</version.lib.junit-platform>

    <!-- maven plugin versions -->
    <version.plugin.compiler>3.8.1</version.plugin.compiler>
    <version.plugin.surefire>3.0.0-M5</version.plugin.surefire>
    <version.plugin.jar>3.2.0</version.plugin.jar>
    <version.plugin.jandex>1.0.6</version.plugin.jandex>
    <version.plugin.helidon-build-tools>2.1.2</version.plugin.helidon-build-tools>

    <!-- META-INF main class-->
    <mainClass>webapi.ApplicationConfig</mainClass>
  </properties>

  <name>openapi-sample</name>
  <url>http://maven.apache.org</url>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.helidon</groupId>
        <artifactId>helidon-dependencies</artifactId>
        <version>${version.helidon}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- MicroProfile libraries -->
    <dependency>
      <groupId>org.eclipse.microprofile.openapi</groupId>
      <artifactId>microprofile-openapi-api</artifactId>
    </dependency>
    <dependency>
        <groupId>io.helidon.microprofile.openapi</groupId>
        <artifactId>helidon-microprofile-openapi</artifactId>
        <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.microprofile.server</groupId>
      <artifactId>helidon-microprofile-server</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.microprofile.rest-client</groupId>
      <artifactId>helidon-microprofile-rest-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.microprofile.cdi</groupId>
      <artifactId>helidon-microprofile-cdi</artifactId>
      <!-- Explicitly exclude slf4j-jdk14 as it is bound to JUL -->
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--  loggin libraries -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <!-- runtime libraries -->
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jandex</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <!-- For binding to application/json. It won't work without this -->
    <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-binding</artifactId>
        <scope>runtime</scope>
    </dependency>

    <!-- testing libraries -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.helidon.microprofile.tests</groupId>
      <artifactId>helidon-microprofile-tests-junit5</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.plugin.compiler}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.plugin.surefire}</version>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${version.plugin.jar}</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>libs</classpathPrefix>
              <mainClass>${mainClass}</mainClass>
              <useUniqueVersions>false</useUniqueVersions>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
        <version>${version.plugin.jandex}</version>
        <executions>
          <execution>
            <id>make-index</id>
            <goals>
              <goal>jandex</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-libs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/libs</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>runtime</includeScope>
              <excludeScope>test</excludeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.helidon.build-tools</groupId>
        <artifactId>helidon-maven-plugin</artifactId>
        <version>${version.plugin.helidon-build-tools}</version>
        <dependencies>
          <dependency>
            <groupId>io.helidon.licensing</groupId>
            <artifactId>helidon-licensing</artifactId>
            <version>${version.helidon}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>third-party-license-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- generate openapi.yml -->
    <profile>
      <id>generateOas</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <includes>
                <include>webapi.GenerateOasFile.java</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
      </dependencies>
    </profile>
    <!-- generate source from openapi.yml -->
    <profile>
      <id>genJavaServer</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>5.0.0</version>
            <configuration>
              <inputSpec>${input.openapi.document}</inputSpec>
              <generatorName>jaxrs-spec</generatorName>
              <configOptions>
                <interfaceOnly>true</interfaceOnly>
                <apiPackage>webapi.server</apiPackage>
                <modelPackage>webapi.server.model</modelPackage>
                <dateLibrary>java8</dateLibrary>
                <sourceFolder>src/main/java</sourceFolder>
                <useSwaggerAnnotations>false</useSwaggerAnnotations>
              </configOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>genJavaClient</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>5.0.0</version>
            <configuration>
              <inputSpec>${input.openapi.document}</inputSpec>
              <generatorName>java</generatorName>
              <configOptions>
                <apiPackage>webapi.client</apiPackage>
                <modelPackage>webapi.client.model</modelPackage>
                <library>microprofile</library>
                <dateLibrary>java8</dateLibrary>
                <sourceFolder>src/main/java</sourceFolder>
              </configOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>genJsClient</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>5.0.0</version>
            <configuration>
              <inputSpec>${input.openapi.document}</inputSpec>
              <generatorName>javascript</generatorName>
              <configOptions>
                <apiPackage>js.client</apiPackage>
                <modelPackage>js.client.model</modelPackage>
              </configOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>genC#Client</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>5.0.0</version>
            <configuration>
              <inputSpec>${input.openapi.document}</inputSpec>
              <generatorName>csharp</generatorName>
              <configOptions>
                <packageName>Csharp.Client</packageName>
              </configOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
